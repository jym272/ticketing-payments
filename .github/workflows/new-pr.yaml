name: pull_request

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'src/**'
      - 'tests/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  code_quality_check:
    uses: ./.github/workflows/code-quality-check.yml
    secrets: inherit
  test-report: #maybe in the same code_quality_check job
    runs-on: ubuntu-latest
    needs: [code_quality_check]
    if: ${{ failure() && needs.code_quality_check.outputs.tests-failed == 'true' }}
    steps:
      -
        name: Some test failed
        run: echo "Some test failed"
#      - name: Download artifact and send to comment in the pr
#        uses: ./.github/actions/test-report
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          pr-number: ${{ github.event.number }}
#          repo-name: ${{ github.repository }}
#          repo-owner: ${{ github.repository_owner }}
  comment-on-pr:
    runs-on: ubuntu-latest
    needs: [ code_quality_check ]
    if: ${{ failure() && needs.code_quality_check.outputs.tests-failed == 'true' }}
    steps:
      - name: Get Artifact URL & PR Info
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          WORKFLOW_RUN_EVENT_OBJ: ${{ toJSON(github.event.workflow_run) }}
        run: |
          
          PREVIOUS_JOB_ID=$(jq -r '.id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
          echo "Previous Job ID: $PREVIOUS_JOB_ID"
          echo "PREVIOUS_JOB_ID=$PREVIOUS_JOB_ID" >> "$GITHUB_ENV"
          
          ARTIFACT_URL=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select(.workflow_run.id==${PREVIOUS_JOB_ID}) |
            select(.expired==false) |
            .archive_download_url")
          
          echo "ARTIFACT URL: $ARTIFACT_URL"
          echo "ARTIFACT_URL=$ARTIFACT_URL" >> "$GITHUB_ENV"
          
          PR_NUMBER=$(jq -r '.pull_requests[0].number' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ")
          
          echo "PR Number: $PR_NUMBER"
          echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_ENV"
          
          HEAD_SHA=$(jq -r '.pull_requests[0].head.sha' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ")
          
          echo "Head sha: $HEAD_SHA"
          echo "HEAD_SHA=$HEAD_SHA" >> "$GITHUB_ENV"

      - name: Update Comment
        env:
          JOB_PATH: "${{ github.server_url }}/${{ github.repository }}/actions/\
              runs/${{ env.PREVIOUS_JOB_ID }}"
          HEAD_SHA: ${{ env.HEAD_SHA }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ env.PR_NUMBER }}
          body: |-
            ## Build Preview
            
            [![badge]]($JOB_PATH)
            
            You can find files attached to the below linked Workflow Run URL (Logs).
            
            Please note that files only stay for around 90 days!
            
            | Name      | Link
            --------------------------------------------------------------------
            | Commit    | ${{ env.HEAD_SHA }}
            
            | Logs      | ${{ env.JOB_PATH }}
            
            | Jar Files | ${{ env. ARTIFACT_URL }}
            
            [badge]: https://img.shields.io/badge/Build-Success!-3fb950?logo=github&style=for-the-badge
